1
1
In programming, the division operator is written as \.
False
<color=#757575>In programming, the division operator is written as /.</color>

1
1
At its simplest, programming is about writing codes for the computer to execute. 
True
<color=#757575>Codes can also be seen as instructions for the computer.</color>

1
1
Pseudocodes are actual working codes that can be executed by the computer.
False
<color=#757575>Pseudocodes are just a generic way to represent the main idea of how the actual code should be written.</color>

1
1
The print() function is used for arithmetic calculations. 
False
<color=#757575>The print() function is used to output anything in its brackets onto the computer screen.</color>

1
1
The modulus operator %, works the same way as the division operator.
False
<color=#757575>The modulus operator %, returns the remainder of the division of 2 numbers.</color>

1
1
The computer executes codes in a line by line manner.
True
<color=#757575>This is extremely important as we cannot simply assume that the computer is able to tell how we want our codes to be executed. Rather, we must explicitly state the flow of how the codes should be executed. In pseudocodes, each statement is indented which shows the flow of execution.</color>

2
1
Assuming that there are 3.2 Malaysian ringgit in each Singapore dollar. Which statement would print the correct amount of 350 Singapore dollars in Malaysian ringgit? 
print(350*3.2)
print(350x3.2)
print(350/3.2)
print(350+3.2)
<color=#757575>In programming, the multiplication operator is *.</color>

2
2
What is the output of the following pseudocode? 
1. print(32 + 9*10/5)
50
82
68
40
<color=#757575>The multiplication and division operators have a higher precedence than the addition operator thus, take place first.</color>

2
1
Which of the following is a programming operator?
/
\
@
x
<color=#757575>/ is the only valid operator here which is used for division purposes in programming.</color>

2
1
There are 1.51 dollars in each pound. How many pounds are there in one dollar?
print(1/1.51)
print(1*1.51)
print(1\1.51)
print(1.51/1)
<color=#757575>The solution would be to take 1 dollar and divide it by 1.51 using the / operator.</color>

2
2
There are 8 bits in one byte. Print out the number of bits in a kilobyte.
(* kilo represents 10^3)
print(8*1000)
print(8x1000)
print(8*10000)
print(8x10000)
<color=#757575>A kilobyte consists of 8,000 bits and the multiplication operator, * should be used.</color>

2
2
There are 8 bits in one byte. How many kilobytes are there in one megabyte?
(* kilo represents 10^3 while megabyte represents 10^6)
0.001
1000
100
0.01
<color=#757575>When expanded, kilobyte would result to 1,000 bytes whereas megabyte results in 1,000,000 bytes. Therefore, a kilobyte is 1/1000 of a megabyte.</color>

3
3
Output the number of months in
a millennium onto the computer screen. 
1. _ (1 * 1000 * _) 
2
print
12
5
24
output
10000
365
display
<color=#757575>There are 12,000 months in a millennium and the function to be used should be print().</color>

3
5
Achieve the following output:
21 4 121 
1. print(_%_)
2. print(_)
3. print(_/_)
5
171
50
4
121
11
5
21
8
211
158
2
<color=#757575>To achieve the value of 21 as the first output, the user will have to mod 171 by 50. The second output is to ensure that the user knows what the print() statement does and in this case, it is simply made to output 4. The last output would simply be taking the value of 121 and dividing it by 11.</color>

3
5
Print out the following sentences
Programming is fun
1. _(_)
2. _(_)
3. _(_)
6
print
Programming
print
Is
print
Fun
0
<color=#757575>The purpose of this question would be to showcase that computers execute codes in a line by line manner. Therefore, the flow of how the codes should be run should be explicitly stated and not be assumed that the computer is able know how we want our codes to be run. This flow in pseudocode is represented by numerically indenting each statement of code.</color>